---
title: "Web Apps with Tools"
subsection: "[TODO] Java Web Apps Tools"
order: 1
description:
- "Java Web Archives"
- "Web apps with Tomcat"
- "Web apps with Maven"
- "Web apps with Eclipse"
layout: lecture.hbs
---



<section>
<h3>MVC</h3>
<p>
	<img src="images/mvc_sequence.png" class="maximize-width" class="noborder" alt="mvc sequence">
</p>
</section>

<section>
<h3>Web App Classical MVC Pattern</h3>
<p>Classical entities in a Web App (client/server) request with server-side MVC.</p>
	<img src="images/generalMVC.svg" class="maximize-width"  alt="mvc sequence">
</section>

<section>
<h3>Java EE Web App MVC Pattern</h3>
<p>Java EE entities in a typical Web App (client/server) request.</p>
	<img src="images/javaWebAppMVC.svg" class="maximize-width"  alt="mvc sequence">
</section>




<section>
<h3>MVC</h3>

</section>
<section>
<h3>MVC</h3>

	<img src="images/generalMVC.svg"  alt="mvc sequence">
</section>
<section>
<h3>MVC</h3>

	<img src="images/generalMVC.svg"  alt="mvc sequence">
</section>
<section>
<h3>MVC</h3>

	<img src="images/generalMVC.svg"  alt="mvc sequence">
</section>

<section data-markdown >
    <script type="text/template">
##Animation

jQuery a quelques effets pré-installés

```
$('h1').hide('slow');
$('h1').slideDown('fast');
$('h1').fadeOut(2000);
```
<!-- .element: class="javascript"  -->

On peut les enchainer

```
$('h1').fadeOut(2000).slideDown();
```
<!-- .element: class="javascript"  -->

http://api.jquery.com/category/effects/

<!-- .element: class="text_center"  -->



    </script>
</section>



<section>
	<table border="1" class="bodyTable x-3">
<tbody><tr class="a x-3">
<td align="left"><tt>validate</tt></td>
<td align="left">validate the project is correct and all necessary information is available.</td></tr>
<tr class="b x-3">
<td align="left" class="x-3"><tt>initialize</tt></td>
<td align="left">initialize build state, e.g. set properties or create directories.</td></tr>
<tr class="a">
<td align="left"><tt>generate-sources</tt></td>
<td align="left">generate any source code for inclusion in compilation.</td></tr>
<tr class="b">
<td align="left"><tt>process-sources</tt></td>
<td align="left">process the source code, for example to filter any values.</td></tr>
<tr class="a">
<td align="left"><tt>generate-resources</tt></td>
<td align="left">generate resources for inclusion in the package.</td></tr>
<tr class="b">
<td align="left"><tt>process-resources</tt></td>
<td align="left">copy and process the resources into the destination directory, ready for packaging.</td></tr>
<tr class="a">
<td align="left"><tt>compile</tt></td>
<td align="left">compile the source code of the project.</td></tr>
<tr class="b">
<td align="left"><tt>process-classes</tt></td>
<td align="left">post-process the generated files from compilation, for example to do bytecode enhancement on Java classes.</td></tr>
<tr class="a">
<td align="left"><tt>generate-test-sources</tt></td>
<td align="left">generate any test source code for inclusion in compilation.</td></tr>
<tr class="b">
<td align="left"><tt>process-test-sources</tt></td>
<td align="left">process the test source code, for example to filter any values.</td></tr>
<tr class="a">
<td align="left"><tt>generate-test-resources</tt></td>
<td align="left">create resources for testing.</td></tr>
<tr class="b">
<td align="left"><tt>process-test-resources</tt></td>
<td align="left">copy and process the resources into the test destination directory.</td></tr>
<tr class="a">
<td align="left"><tt>test-compile</tt></td>
<td align="left">compile the test source code into the test destination directory</td></tr>
<tr class="b">
<td align="left"><tt>process-test-classes</tt></td>
<td align="left">post-process the generated files from test compilation, for example to do bytecode enhancement on Java classes. For Maven 2.0.5 and above.</td></tr>
<tr class="a">
<td align="left"><tt>test</tt></td>
<td align="left">run tests using a suitable unit testing framework. These tests should not require the code be packaged or deployed.</td></tr>
<tr class="b">
<td align="left"><tt>prepare-package</tt></td>
<td align="left">perform any operations necessary to prepare a package before the actual packaging. This often results in an unpacked, processed version of the package. (Maven 2.1 and above)</td></tr>
<tr class="a">
<td align="left"><tt>package</tt></td>
<td align="left">take the compiled code and package it in its distributable format, such as a JAR.</td></tr>
<tr class="b">
<td align="left"><tt>pre-integration-test</tt></td>
<td align="left">perform actions required before integration tests are executed. This may involve things such as setting up the required environment.</td></tr>
<tr class="a">
<td align="left"><tt>integration-test</tt></td>
<td align="left">process and deploy the package if necessary into an environment where integration tests can be run.</td></tr>
<tr class="b">
<td align="left"><tt>post-integration-test</tt></td>
<td align="left">perform actions required after integration tests have been executed. This may including cleaning up the environment.</td></tr>
<tr class="a">
<td align="left"><tt>verify</tt></td>
<td align="left">run any checks to verify the package is valid and meets quality criteria.</td></tr>
<tr class="b">
<td align="left"><tt>install</tt></td>
<td align="left">install the package into the local repository, for use as a dependency in other projects locally.</td></tr>
<tr class="a">
<td align="left"><tt>deploy</tt></td>
<td align="left">done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.</td></tr></tbody></table>
</section>
